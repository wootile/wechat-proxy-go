name: Release

on:
  push:
    tags:
      - 'v*'

env:
  GO_VERSION: '1.23'

jobs:
  build:
    name: Build Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: darwin
            goarch: arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Download dependencies
      run: go mod download

    - name: Get version info
      id: version
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        echo "version=${VERSION}" >> $GITHUB_OUTPUT

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        BINARY_NAME="wechat-proxy-${{ matrix.goos }}-${{ matrix.goarch }}"
        
        CGO_ENABLED=0 go build \
          -ldflags "-X main.Version=${{ steps.version.outputs.version }} -w -s" \
          -o ${BINARY_NAME} \
          main.go
        
        # Create archive
        tar -czf ${BINARY_NAME}.tar.gz ${BINARY_NAME}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wechat-proxy-${{ matrix.goos }}-${{ matrix.goarch }}
        path: |
          wechat-proxy-*
        retention-days: 5

  test:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Run tests
      run: go test -v ./...

    - name: Download Linux artifact
      uses: actions/download-artifact@v4
      with:
        name: wechat-proxy-linux-amd64

    - name: Test binary
      run: |
        chmod +x wechat-proxy-linux-amd64
        
        # Start proxy server in background
        PROXY_PORT=8081 ./wechat-proxy-linux-amd64 &
        PROXY_PID=$!
        
        # Wait for server to start
        sleep 3
        
        # Test basic functionality
        if curl -s --connect-timeout 5 http://localhost:8081 >/dev/null; then
          echo "✅ Proxy server started successfully"
        else
          echo "❌ Proxy server failed to start"
          kill $PROXY_PID || true
          exit 1
        fi
        
        # Test version command
        ./wechat-proxy-linux-amd64 --version || echo "Version command test completed"
        
        # Cleanup
        kill $PROXY_PID || true

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build, test]
    permissions:
      contents: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Prepare release files
      run: |
        mkdir -p release
        
        # Move all platform binaries to release directory
        find . -name "wechat-proxy-*" -type f \( -name "*.tar.gz" -o -executable \) | while read file; do
          if [[ ! "$file" =~ /build/ ]]; then
            cp "$file" release/
          fi
        done
        
        # Create checksums
        cd release
        sha256sum * > SHA256SUMS
        cd ..

    - name: Generate release notes
      id: release_notes
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        echo "VERSION=${VERSION}" >> $GITHUB_ENV
        
        cat << EOF > release_notes.md
        ## WeChat API Proxy Server ${VERSION}
        
        Lightweight HTTP/HTTPS proxy for WeChat API requests.
        
        ### Downloads
        
        - \`wechat-proxy-linux-amd64.tar.gz\` - Linux x86_64
        - \`wechat-proxy-linux-arm64.tar.gz\` - Linux ARM64
        - \`wechat-proxy-darwin-arm64.tar.gz\` - macOS Apple Silicon
        
        ### Usage
        
        \`\`\`bash
        tar -xzf wechat-proxy-*.tar.gz
        chmod +x wechat-proxy-*
        ./wechat-proxy-linux-amd64
        \`\`\`
        
        Default port: 8080 | Supported domains: api.weixin.qq.com, api.wechat.com, mp.weixin.qq.com, qyapi.weixin.qq.com
        EOF
        
        echo "notes_file=release_notes.md" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: release/*
        body_path: ${{ steps.release_notes.outputs.notes_file }}
        tag_name: ${{ github.ref_name }}
        name: WeChat API Proxy Server ${{ env.VERSION }}
        draft: false
        prerelease: false
        generate_release_notes: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 